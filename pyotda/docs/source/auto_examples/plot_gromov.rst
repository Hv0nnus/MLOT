

.. _sphx_glr_auto_examples_plot_gromov.py:


==========================
Gromov-Wasserstein example
==========================

This example is designed to show how to use the Gromov-Wassertsein distance
computation in POT.



.. code-block:: python


    # Author: Erwan Vautier <erwan.vautier@gmail.com>
    #         Nicolas Courty <ncourty@irisa.fr>
    #
    # License: MIT License

    import scipy as sp
    import numpy as np
    import matplotlib.pylab as pl
    from mpl_toolkits.mplot3d import Axes3D  # noqa
    import ot







Sample two Gaussian distributions (2D and 3D)
---------------------------------------------

The Gromov-Wasserstein distance allows to compute distances with samples that
do not belong to the same metric space. For demonstration purpose, we sample
two Gaussian distributions in 2- and 3-dimensional spaces.



.. code-block:: python



    n_samples = 30  # nb samples

    mu_s = np.array([0, 0])
    cov_s = np.array([[1, 0], [0, 1]])

    mu_t = np.array([4, 4, 4])
    cov_t = np.array([[1, 0, 0], [0, 1, 0], [0, 0, 1]])


    xs = ot.datasets.make_2D_samples_gauss(n_samples, mu_s, cov_s)
    P = sp.linalg.sqrtm(cov_t)
    xt = np.random.randn(n_samples, 3).dot(P) + mu_t







Plotting the distributions
--------------------------



.. code-block:: python



    fig = pl.figure()
    ax1 = fig.add_subplot(121)
    ax1.plot(xs[:, 0], xs[:, 1], '+b', label='Source samples')
    ax2 = fig.add_subplot(122, projection='3d')
    ax2.scatter(xt[:, 0], xt[:, 1], xt[:, 2], color='r')
    pl.show()




.. image:: /auto_examples/images/sphx_glr_plot_gromov_001.png
    :align: center




Compute distance kernels, normalize them and then display
---------------------------------------------------------



.. code-block:: python



    C1 = sp.spatial.distance.cdist(xs, xs)
    C2 = sp.spatial.distance.cdist(xt, xt)

    C1 /= C1.max()
    C2 /= C2.max()

    pl.figure()
    pl.subplot(121)
    pl.imshow(C1)
    pl.subplot(122)
    pl.imshow(C2)
    pl.show()




.. image:: /auto_examples/images/sphx_glr_plot_gromov_002.png
    :align: center




Compute Gromov-Wasserstein plans and distance
---------------------------------------------



.. code-block:: python


    p = ot.unif(n_samples)
    q = ot.unif(n_samples)

    gw0, log0 = ot.gromov.gromov_wasserstein(
        C1, C2, p, q, 'square_loss', verbose=True, log=True)

    gw, log = ot.gromov.entropic_gromov_wasserstein(
        C1, C2, p, q, 'square_loss', epsilon=5e-4, log=True, verbose=True)


    print('Gromov-Wasserstein distances: ' + str(log0['gw_dist']))
    print('Entropic Gromov-Wasserstein distances: ' + str(log['gw_dist']))


    pl.figure(1, (10, 5))

    pl.subplot(1, 2, 1)
    pl.imshow(gw0, cmap='jet')
    pl.title('Gromov Wasserstein')

    pl.subplot(1, 2, 2)
    pl.imshow(gw, cmap='jet')
    pl.title('Entropic Gromov Wasserstein')

    pl.show()



.. image:: /auto_examples/images/sphx_glr_plot_gromov_003.png
    :align: center


.. rst-class:: sphx-glr-script-out

 Out::

    It.  |Loss        |Delta loss
    --------------------------------
        0|4.328711e-02|0.000000e+00
        1|2.281369e-02|-8.974178e-01
        2|1.843659e-02|-2.374139e-01
        3|1.602820e-02|-1.502598e-01
        4|1.353712e-02|-1.840179e-01
        5|1.285687e-02|-5.290977e-02
        6|1.284537e-02|-8.952931e-04
        7|1.284525e-02|-8.989584e-06
        8|1.284525e-02|-8.989950e-08
        9|1.284525e-02|-8.989949e-10
    It.  |Err         
    -------------------
        0|7.263293e-02|
       10|1.737784e-02|
       20|7.783978e-03|
       30|3.399419e-07|
       40|3.751207e-11|
    Gromov-Wasserstein distances: 0.012845252089244688
    Entropic Gromov-Wasserstein distances: 0.013543882352191079


**Total running time of the script:** ( 0 minutes  1.916 seconds)



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_gromov.py <plot_gromov.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_gromov.ipynb <plot_gromov.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
